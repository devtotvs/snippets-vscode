{
	"Config Creator": {
		"prefix": "thfconfig",
		"body": [
			"/**",
			"* @ngdoc config",
			"* @module ${1:moduleName}",
			"* @name ${2:configName}",
			"* @requires ${3:requires}",
			"* @dependencies ${4:dependencies}",
			"* @title ${5:Controller Title}",
			"*",
			"* @description",
			"*",
			"${6:}",
			"*",
			"*/",
			"(function () {",
			"    'use strict';",
			"    angular",
			"        .module('${1:moduleName}')",
			"        .config(${7:configFunction});",
			"    ${7:configFunction}.\\$inject = [${3:requires}];",
			"    function ${7:configFunction}(${3:requires}) {",
			"        ${8:}",
			"    }",
			"}());"
		],
		"description": "Create the .config file"
	},
	"Config Spec Creator": {
		"prefix": "thfconfigspec",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object configSpec",
			"*",
			"* @requires ${4:module}.config",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.config:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${1:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes das funções do config",
			"    xdescribe('function >', function () {",
			"        ${5:}",
			"    }); // function",
			"",
			"});",
			""
		],
		"description": "Create the .config.spec file"
	},
	"Controller Creator": {
		"prefix": "thfcontroller",
		"body": [
			"/**",
			"* @ngdoc type",
			"* @module ${1:totvsName}",
			"* @name ${2:totvsName}",
			"* @requires ${3:requires}",
			"* @dependencies angular${4:}",
			"* @title ${5:Controller Title}",
			"*",
			"* @description",
			"*",
			"* ${6:}",
			"*",
			"*/",
			"",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:totvsName}')",
			"        .controller('${7:controllerName}', ${7:controllerName});",
			"",
			"    ${7:controllerName}.\\$inject = ['${3:requires}'];",
			"",
			"    function ${7:controllerName}( ${3:requires} ) {",
			"",
			"        var self = this;",
			"",
			"        ${8:}",
			"",
			"    }",
			"",
			"}());",
			""
		],
		"description": "Create the .controller file"
	},
	"Controller Spec Creator": {
		"prefix": "thfcontrollerspec",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object controllerSpec",
			"*",
			"* @requires ${4:module}.controller",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.controller:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${1:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes das funções do controller",
			"    xdescribe('function >', function () {",
			"        ${5:}",
			"    }); // function",
			"",
			"});",
			""
		],
		"description": "Create the .controller.config file"
	},
	"Directive Creator": {
		"prefix": "thfdirective",
		"body": [
			"/**",
			"* @ngdoc directive",
			"* @module ${1:moduleName}",
			"* @name ${2:directiveName}",
			"* @title ${3:Directive Title}",
			"*",
			"* @description",
			"*",
			"* ${4:}",
			"*",
			"* @restrict ${5:A}",
			"*",
			"* @param {${6:expression}} ${7:param description}.",
			"*",
			"* @example",
			"*",
			"* <example name='totvs-button-sample' module='${8:sampleModule}'>",
			"* <file name='index.html'>",
			"*",
			"* </file>",
			"* <file name='app.js'>",
			"*",
			"*      angular.module('${8:sampleModule}', ['${9:totvsButton}']).controller('${10:SampleController}', ${11:SampleController});",
			"*",
			"*      function ${12:SampleController}() {",
			"*           var self = this;",
			"*",
			"*      }",
			"* </file>",
			"*</example>",
			"*",
			"*/",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:moduleName}')",
			"        .directive('${2:directiveName}', ${2:directiveName});",
			"",
			"    ${2:directiveName}.\\$inject = ['${13:requires}'];",
			"",
			"    function ${2:directiveName}( ${13:requires} ) {",
			"",
			"        var directive = {",
			"            template: '<div>${15:}</div>',",
			"            restrict: '${5:A}',",
			"            scope: {${16:}},",
			"            controller: '${17:}Controller',",
			"            controllerAs: 'controller',",
			"            link: link",
			"        };",
			"",
			"        return directive;",
			"",
			"        /**",
			"        * @name link",
			"        *",
			"        * @description ${18:Função link da diretiva}",
			"        *",
			"        * @param {object} scope Escopo da diretiva",
			"        * @param {element} element Elemento da diretiva",
			"        * @param {object} attrs Atributos do elemento da diretiva",
			"        */",
			"        function link(scope, element, attrs, controller) {",
			"",
			"            ${19:}",
			"",
			"        }",
			"    }",
			"});"
		],
		"description": "Create the .directive file"
	},
	"Directive Creator (lite)": {
		"prefix": "thfdirectivelite",
		"body": [
			"/**",
			"* @ngdoc directive",
			"* @module ${1:moduleName}",
			"* @name ${2:directiveName}",
			"* @title ${3:Directive Title}",
			"*",
			"* @description",
			"*",
			"* ${4:}",
			"*",
			"* @restrict ${5:A}",
			"*",
			"* @param {${6:expression}} ${7:param description}.",
			"*",
			"* @example",
			"*",
			"* ${8:}",
			"*",
			"*/",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:moduleName}')",
			"        .directive('${2:directiveName}', ${2:directiveName});",
			"",
			"    ${2:directiveName}.\\$inject = ['${10:requires}'];",
			"",
			"    function ${2:directiveName}( ${10:requires} ) {",
			"",
			"        var directive = {",
			"            template: '<div>${12:}</div>',",
			"            restrict: '${5:A}',",
			"            scope: {${13:}},",
			"            controller: '${14:}Controller',",
			"            controllerAs: 'controller',",
			"            link: link",
			"        };",
			"",
			"        return directive;",
			"    }",
			"});"
		],
		"description": "Create the .directive (lite) file"
	},
	"Function Compile": {
		"prefix": "thffunctioncompile",
		"body": [
			"/**",
			"* @name compile",
			"*",
			"* @description Função compile da diretiva",
			"*",
			"* @param {element} element Elemento da diretiva",
			"* @param {object} attrs Atributos do elemento da diretiva",
			"*/\nfunction compile(element, attrs) {",
			"",
			"    ${1:}",
			"",
			"}",
			""
		],
		"description": "Create the compile function for .directive file"
	},
	"Function Link": {
		"prefix": "thffunctionlink",
		"body": [
			"/**",
			"* @name link",
			"*",
			"* @description Função link da diretiva",
			"*",
			"* @param {object} scope Escopo da diretiva",
			"* @param {element} element Elemento da diretiva",
			"* @param {object} attrs Atributos do elemento da diretiva",
			"*/",
			"       function link(scope, element, attrs, controller) {",
			"",
			"    ${1:}",
			"",
			"}",
			""
		],
		"description": "Create the link function for .directive file"
	},
	"Directive Spec Creator": {
		"prefix": "thfdirectivespec",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object directiveSpec",
			"*",
			"* @created ${3:currentDate} v${1:currentVersion}",
			"* @updated ${3:currentDate} v${1:currentVersion}",
			"*",
			"* @requires ${4:module}.directive",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.directive:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${1:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes dos elementos HTML",
			"    xdescribe('element >', function () {",
			"        ${5:}",
			"    }); // element",
			"",
			"    // Testes dos atributos / propriedades",
			"    xdescribe('attribute >', function () {",
			"",
			"        xit('Verifica o tipo de todas as propriedades', function () {",
			"            ${6:}",
			"        });",
			"",
			"    }); // attribute",
			"",
			"    // Testes dos métodos / eventos",
			"    xdescribe('method >', function () {",
			"",
			"        xit('Verifica o tipo de todos os methodos da diretiva', function () {",
			"            ${7:}",
			"        });",
			"",
			"    }); // method",
			"",
			"});",
			""
		],
		"description": "Create the .directive.spec file"
	},
	"Factory Creator": {
		"prefix": "thffactory",
		"body": [
			"/**",
			"* @ngdoc factory",
			"* @module ${1:moduleName}",
			"* @name ${3:factoryName}",
			"* @requires ${4:requires}",
			"* @title ${5:Factory Title}",
			"* @dependencies ${6:dependencies}",
			"*",
			"* @description",
			"*",
			"${7:}",
			"*",
			"*/",
			"",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:moduleName}')",
			"        .factory('${3:factoryName}', ${3:factoryName});",
			"",
			"    ${3:factoryName} = ['${4:requires}'];",
			"",
			"    function ${3:factoryName}( ${4:requires} ) {",
			"",
			"        var factory = {",
			"            ${9:}: ${9:}",
			"        }",
			"",
			"        return factory;",
			"",
			"        function ${9:}() {",
			"",
			"            ${11:}",
			"",
			"        }",
			"",
			"    }",
			"",
			"}());",
			""
		],
		"description": "Create the .factory file"
	},
	"Factory Spec Creator": {
		"prefix": "thffactory",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object factorySpec",
			"*",
			"* @requires ${4:module}.factory",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.factory:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${1:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes das funções do factory",
			"    xdescribe('function >', function () {",
			"        ${5:}",
			"    }); // function",
			"",
			"});",
			""
		],
		"description": "Create the .factory.spec file"
	},
	"Filter Creator": {
		"prefix": "thffilter",
		"body": [
			"/**",
			"* @ngdoc filter",
			"* @module ${2:moduleName}",
			"* @name ${3:filterName}",
			"* @requires ${5:requires}",
			"* @title ${5:Filter Title}",
			"* @dependencies ${6:}",
			"*",
			"* @description",
			"*",
			"${7:}",
			"*",
			"*/",
			"",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${2:moduleName}')",
			"        .filter('${3:filterName}', ${3:filterName});",
			"",
			"    ${3:filterName}.\\$inject = ['${5:requires}'];",
			"",
			"    function ${3:filterName}( ${5:requires} ) {",
			"",
			"        return filter;",
			"",
			"        function filter(string) {",
			"",
			"            ${9:}",
			"",
			"            return string;",
			"",
			"        }",
			"",
			"    }",
			"",
			"}());",
			""
		],
		"description": "Create the .filter file"
	},
	"Filter Spec Creator": {
		"prefix": "thffilterspec",
		"body": [
			"/**",
			"* @module ${2:moduleName}",
			"* @object filterSpec",
			"*",
			"* @requires ${4:module}.filter",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.filter:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${2:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes das funções do filter",
			"    xdescribe('function >', function () {",
			"        ${5:}",
			"    }); // function",
			"",
			"});",
			""
		],
		"description": "Create the .filter.spec file"
	},
	"Module Creator": {
		"prefix": "thfmodule",
		"body": [
			"/**",
			"* @ngdoc module",
			"* @module ${1:moduleName}",
			"* @name ${2:moduleName}",
			"* @requires ${3:requires}",
			"* @dependencies ${4:bootstrap, angular, kendo-ui}",
			"* @title ${5:Module Title}",
			"*",
			"* @description",
			"*",
			"* ${6:}",
			"*",
			"*/",
			"",
			"(function () {",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:moduleName}', [${7:}]);",
			"",
			"}());",
			""
		],
		"description": "Create the .module file"
	},
	"Module Spec Creator": {
		"prefix": "thfmodulespec",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object moduleSpec",
			"*",
			"* @requires ${4:module}.module",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.module: ', function () {",
			"",
			"    'use strict';",
			"",
			"    var ${1:moduleName};",
			"",
			"    beforeEach(function () {",
			"        ${1:moduleName} = angular.module('${1:moduleName}');${5:}",
			"    });",
			"",
			"    it('Verifica se o módulo ${4:module} foi instanciado', function () {",
			"        expect(${1:moduleName}).not.toBeUndefined();",
			"        expect(${1:moduleName}.name).toBe('${1:moduleName}');",
			"    });",
			"});",
			""
		],
		"description": "Create the .module.spec file"
	},
	"Provider Creator": {
		"prefix": "thfprovider",
		"body": [
			"/**",
			"* @ngdoc provider",
			"* @module ${1:moduleName}",
			"* @name ${2:providerName}",
			"* @requires ${3:requires}",
			"* @dependencies ${4:dependencies}",
			"* @title ${5:Provider Title}",
			"*",
			"* @description",
			"*",
			"   ${7:}",
			"*",
			"*/",
			"",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:moduleName}')",
			"        .provider('${2:providerName}', ${2:providerName});",
			"",
			"    ${2:providerName}.\\$inject = [${3:requires}];",
			"",
			"    function ${2:providerName}(${3:requires}) {",
			"",
			"        this.$get = ${8:};",
			"",
			"        ${8:}.\\$inject = [${9:}];",
			"",
			"        function ${8:}(${9:}) {",
			"",
			"            var service = {",
			"                ${10:}",
			"            };",
			"",
			"            return service;",
			"",
			"        }",
			"",
			"    }",
			"",
			"}());",
			""
		],
		"description": "Create the .provider file"
	},
	"Provider Spec Creator": {
		"prefix": "thfproviderspec",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object providerSpec",
			"*",
			"* @created ${3:currentDate} v${1:currentVersion}",
			"* @updated ${3:currentDate} v${1:currentVersion}",
			"*",
			"* @requires ${4:module}.provider",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.provider:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${1:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes das funções do provider",
			"    xdescribe('function >', function () {",
			"        ${5:}",
			"    }); // function",
			"",
			"});",
			""
		],
		"description": "Create the .provider.spec file"
	},
	"Service Creator": {
		"prefix": "thfservice",
		"body": [
			"/**",
			"* @ngdoc service",
			"* @module ${1:moduleName}",
			"* @name ${2:serviceName}",
			"* @requires ${3:requires}",
			"* @dependencies ${4:dependencies}",
			"* @title ${5:Service Title}",
			"*",
			"* @description",
			"*",
			"   ${6:}",
			"*",
			"*/",
			"",
			"(function () {",
			"",
			"    'use strict';",
			"",
			"    angular",
			"        .module('${1:moduleName}')",
			"        .service('${2:serviceName}', ${2:serviceName});",
			"",
			"    ${2:serviceName}.\\$inject = ['${3:requires}'];",
			"",
			"    function ${2:serviceName}( ${3:requires} ) {",
			"",
			"        this.${8:} = ${8:};",
			"",
			"        function ${8:}() {",
			"",
			"            ${9:}",
			"",
			"        }",
			"",
			"    }",
			"",
			"}());",
			""
		],
		"description": "Create the .service file"
	},
	"Service Spec Creator": {
		"prefix": "thfservicespec",
		"body": [
			"/**",
			"* @module ${1:moduleName}",
			"* @object serviceSpec",
			"*",
			"* @created ${3:currentDate} v${1:currentVersion}",
			"* @updated ${3:currentDate} v${1:currentVersion}",
			"*",
			"* @requires ${4:module}.service",
			"*",
			"* @description Teste unitário.",
			"*/",
			"\ndescribe('${4:module}.service:', function () {",
			"",
			"    'use strict';",
			"",
			"    var rootScope,",
			"        compile;",
			"",
			"    beforeEach(module('${1:moduleName}'));",
			"",
			"    beforeEach(inject(function ($rootScope, $compile) {",
			"        rootScope = $rootScope;",
			"        compile = $compile;",
			"    }));",
			"",
			"    // Testes das funções do service",
			"    xdescribe('function >', function () {",
			"        ${5:}",
			"    }); // function",
			"",
			"});",
			""
		],
		"description": "Create the .service.spec file"
	}
}